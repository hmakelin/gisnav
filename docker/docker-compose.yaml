version: "3.4"

# platforms is a sequence not a mapping so careful when merging
# with something that defines its own platforms
x-base: &base
  build:
    dockerfile: Dockerfile
    #platforms:
    #  - "linux/amd64"
  network_mode: host

# devices is a sequence not a mapping so careful when merging
# with something that defines its own devices
x-nvidia-gpu: &nvidia-gpu
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [ gpu ]

# volumes is a sequence not a mapping so careful when merging
# with something that defines its own volumes
x-x11: &x11
  environment:
    QT_X11_NO_MITSHM: 1
    DISPLAY: ${DISPLAY}
  volumes:
    - /tmp/.X11-unix:/tmp/.X11-unix:ro
    - /dev/dri:/dev/dri  # Needed at least by rviz

x-ros: &ros
  environment:
    ROS_DOMAIN_ID: 0
  volumes:
    - /dev/shm:/dev/shm

x-tty: &tty
  stdin_open: true
  tty: true

services:
  mapserver:
    <<: *base
    build:
      context: mapserver
      args:
        DOCKER_TAG: latest
      #platforms:
      #  - "linux/amd64"
      #  - "linux/arm64"
    command: /usr/local/bin/start-server

  micro-ros-agent:
    <<: [*base, *ros]
    build:
      context: micro-ros-agent
      #platforms:
      #  - "linux/amd64"
      #  - "linux/arm64"
    command: udp4 -p 8888

  mavros:
    <<: [*base, *ros]
    build:
      context: mavros
      args:
        ROS_VERSION: humble
      #platforms:
      #  - "linux/amd64"
      #  - "linux/arm64"
    command: ros2 run mavros mavros_node --ros-args --param fcu_url:=udp://:14540@localhost:14557

  qgc:
    <<: [*base, *x11]
    build:
      context: qgc
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    privileged: true

  # Note: build context is repository root
  # Note 2: The "docker buildx build" command in the push_gisnav_images.yml workflow
  #  duplicates these build arguments. They should be changed together.
  gisnav:
    <<: [*base, *ros, *tty, *nvidia-gpu]
    #image: "ghcr.io/hmakelin/gisnav:${TAG:-latest}"
    image: ghcr.io/hmakelin/gisnav:latest
    build:
      context: ..
      dockerfile: docker/gisnav/Dockerfile
      args:
        ROS_VERSION: humble
    command: ros2 launch gisnav px4.dev.launch.py

  px4:
    <<: [*base, *x11, *tty, *nvidia-gpu]
    build:
      context: px4
      args:
        ROS_VERSION: foxy
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    command: make px4_sitl gazebo-classic_typhoon_h480__ksql_airport

  ardupilot:
    <<: [*base, *x11, *nvidia-gpu]
    build:
      context: ardupilot
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    privileged: True
    command: bash -c "cd ~ && make sim_vehicle"

  torch-serve:
    <<: [*base, *x11, *nvidia-gpu ]
    build:
      context: torch-serve
      args:
        BASE_IMAGE: pytorch/torchserve:latest-gpu
      #platforms:
      #  - "linux/amd64"
      #  - "linux/arm64"

  # Note: build context is repository root
  rviz:
    <<: [*base, *x11, *ros, *nvidia-gpu]
    build:
      context: rviz
      args:
        ROS_VERSION: humble
    command: rviz2 -d gisnav_config.rviz

  gscam:
    <<: [*base, *ros]
    build:
      context: gscam
      args:
        ROS_VERSION: humble
    command:
      - "ros2"
      - "run"
      - "gscam"
      - "gscam_node"
      - "--ros-args"
      - "--params-file"
      - "gscam_params.yaml"
      - "-p"
      - "camera_info_url:=file:///camera_calibration.yaml"

  autoheal:
    <<: [*base]
    image: willfarrell/autoheal
    restart: always
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  qgis:
    <<: [*base, *x11]
    build:
      context: qgis
    command: qgis
